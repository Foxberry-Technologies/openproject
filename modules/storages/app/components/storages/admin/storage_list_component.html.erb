<%=
  render(Primer::Beta::BorderBox.new) do |component|
    component.with_header(color: :subtle) do
      flex_layout(align_items: :center) do |header_container|
        header_container.with_column(flex: :auto) do
          I18n.t('storages.count', count: storages.size)
        end

        header_container.with_column(text_align: :right, style: "width: 100px;") do
          render(Primer::Beta::Button.new(
            scheme: :invisible,
            size: :medium,
            align_content: :center
          )) do |component|
            component.with_trailing_action_icon(icon: "triangle-down")
            I18n.t('storages.label_provider')
          end
        end

        header_container.with_column(text_align: :right, style: "width: 100px;") do
          render(Primer::Beta::Button.new(
            scheme: :invisible,
            size: :medium,
            align_content: :center
          )) do |component|
            component.with_trailing_action_icon(icon: "triangle-down")
            I18n.t('storages.label_creator')
          end
        end
      end
    end

    if storages.present?
      storages.map do |storage|
        component.with_row(scheme: :default, id: storage_row_css_id(storage)) do
          grid_layout('op-storage-list', tag: :div, align_items: :center) do |grid|
            unless storage.configured?
              grid.with_area(:icon, tag: :div) do
                render(Primer::Beta::Octicon.new(:'alert-fill', size: :small, color: :severe, classes: 'mr-2'))
              end
            end

            grid.with_area(:name, tag: :div, mr: 3) do
              render(Primer::Beta::Text.new) { storage.name }
            end

            grid.with_area(:time, tag: :div, color: :subtle, mr: 3) do
              render(Primer::Beta::Text.new) { I18n.t('activity.item.created_on', datetime: helpers.format_time(storage.created_at)).capitalize }
            end

             grid.with_area(:user, tag: :div, color: :subtle, mr: 3) do
              render(Users::AvatarComponent.new(user: storage.creator, size: :mini, link: false, show_name: true))
            end

            grid.with_area(:provider, tag: :div, color: :subtle, mr: 3) do
              render(Primer::Beta::Truncate.new) { storage.short_provider_type }
            end

            grid.with_area(:host, tag: :div, color: :subtle) do
              render(Primer::Beta::Truncate.new) { storage.host }
            end
          end
        end
      end
    else
      component.with_row(scheme: :default) do
        render Primer::Beta::Blankslate.new(narrow: true, spacious: false, border: false) do |component|
          component.with_heading(tag: :h2).with_content(I18n.t('storages.storage_list_blank_slate.heading'))
          component.with_description { I18n.t('storages.storage_list_blank_slate.description') }
        end
      end
    end
  end
%>
